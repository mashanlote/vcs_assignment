openapi: 3.0.3
info:
  title: Weather API
  description: Weather API
  version: 1.0.0
servers:
  - url: 'https://localhost:8080/api/weather'
paths:
  /cities:
    get:
      summary: Returns list of available cities
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cities'
    post:
      summary: Adds city with current temperature
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityNew'
      responses:
        "201":
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityCreated'
        "400":
          $ref: '#/components/responses/UserError'
  /cities/{cityId}:
    get:
      summary: Returns current weather for city by id
      parameters:
        - name: cityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weather'
        "400":
          $ref: '#/components/responses/UserError'
        "404":
          $ref: '#/components/responses/NotFound'
    put:
      summary: Updates weather information for the city
      parameters:
        - name: cityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityUpdate'
      responses:
        "200":
          description: Ok.
        "400":
          $ref: '#/components/responses/UserError'
        "404":
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Removes city and its weather data
      parameters:
        - name: cityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Deleted.
        "400":
          $ref: '#/components/responses/UserError'
        "404":
          $ref: '#/components/responses/NotFound'
components:
  responses:
    NotFound:
      description: City does not exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UserError:
      description: There was a mistake processing the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Cities:
      type: array
      items:
        type: string
        format: uuid
    CityNew:
      type: object
      properties:
        regionName:
          type: string
        temperature:
          type: number
          format: double
    CityCreated:
      type: object
      properties:
        regionId:
          type: string
          format: uuid
    CityUpdate:
      type: object
      properties:
        regionId:
          type: string
          format: uuid
        temperature:
          type: number
          format: double
    Error:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      required:
        - status
        - message
    Weather:
      type: object
      properties:
        regionId:
          type: string
          format: uuid
        regionName:
          type: string
        temperature:
          type: number
          format: double
        date:
          type: string
          format: date-time
